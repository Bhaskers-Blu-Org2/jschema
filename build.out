MSBuild auto-detection: using msbuild version '14.0' from 'C:\Program Files (x86)\MSBuild\14.0\bin'.
All packages listed in packages.config are already installed.
Microsoft (R) Build Engine version 14.0.25115.1
Copyright (C) Microsoft Corporation. All rights reserved.

  Json.Schema -> G:\Code\jschema\bld\bin\Json.Schema\AnyCPU_Release\Microsoft.Json.Schema.dll
  Creating NuGet package file G:\Code\jschema\bld\bin\NuGet\Release\Json.Schema.nupkg...
  NuGet package file creation succeeded.
  Json.Schema.UnitTests -> G:\Code\jschema\bld\bin\Json.Schema.UnitTests\AnyCPU_Release\Microsoft.Json.Schema.UnitTests.dll
  Copying Roslyn implementation assemblies to output directory...
  Json.Schema.ToDotNet -> G:\Code\jschema\bld\bin\Json.Schema.ToDotNet\AnyCPU_Release\Microsoft.Json.Schema.ToDotNet.dll
  JsonSchemaToDotNet -> G:\Code\jschema\bld\bin\JsonSchemaToDotNet\AnyCPU_Release\JsonSchemaToDotNet.exe
  Copying Roslyn implementation assemblies to output directory...
  Creating NuGet package file G:\Code\jschema\bld\bin\NuGet\Release\Json.Schema.ToDotNet.nupkg...
  NuGet package file creation succeeded.
  Json.Schema.ToDotNet.UnitTests -> G:\Code\jschema\bld\bin\Json.Schema.ToDotNet.UnitTests\AnyCPU_Release\Microsoft.Json.Schema.ToDotNet.UnitTests.dll
  Copying Roslyn implementation assemblies to output directory...
  Json.Schema.ValidationSuiteTests -> G:\Code\jschema\bld\bin\Json.Schema.ValidationSuiteTests\AnyCPU_Release\Microsoft.Json.Schema.ValidationSuiteTests.dll
xUnit.net Console Runner (32-bit .NET 4.0.30319.42000)
  Discovering: Microsoft.Json.Schema.ToDotNet.UnitTests
  Discovered:  Microsoft.Json.Schema.ToDotNet.UnitTests
  Starting:    Microsoft.Json.Schema.ToDotNet.UnitTests
  Finished:    Microsoft.Json.Schema.ToDotNet.UnitTests
=== TEST EXECUTION SUMMARY ===
   Microsoft.Json.Schema.ToDotNet.UnitTests  Total: 62, Errors: 0, Failed: 0, Skipped: 0, Time: 3.217s
xUnit.net Console Runner (32-bit .NET 4.0.30319.42000)
  Discovering: Microsoft.Json.Schema.UnitTests
  Discovered:  Microsoft.Json.Schema.UnitTests
  Starting:    Microsoft.Json.Schema.UnitTests
  Finished:    Microsoft.Json.Schema.UnitTests
=== TEST EXECUTION SUMMARY ===
   Microsoft.Json.Schema.UnitTests  Total: 154, Errors: 0, Failed: 0, Skipped: 0, Time: 0.754s
xUnit.net Console Runner (32-bit .NET 4.0.30319.42000)
  Discovering: Microsoft.Json.Schema.ValidationSuiteTests
  Discovered:  Microsoft.Json.Schema.ValidationSuiteTests
  Starting:    Microsoft.Json.Schema.ValidationSuiteTests
      Expected string to be <null>, but found "Error reading G:\Code\JSON-Schema-Test-Suite\tests\draft4\additionalItems.json: Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Microsoft.Json.Schema.JsonSchema' because the type requires a JSON object (e.g. {\"name\":\"value\"}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {\"name\":\"value\"}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '[0].schema.items', line 5, position 23.".
      Stack Trace:
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net45\Execution\XUnit2TestFramework.cs(35,0): at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs(42,0): at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs(25,0): at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs(197,0): at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Primitives\ReferenceTypeAssertions.cs(33,0): at FluentAssertions.Primitives.ReferenceTypeAssertions`2.BeNull(String because, Object[] becauseArgs)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      Expected collection to be empty because test "anyOf with base schema: mismatch base schema" should pass, but found {"(1,1): error JS1001: The schema requires \"root object\" to be of type \"String\", but the schema validator found a token of type \"Integer\"."}.
      Stack Trace:
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net45\Execution\XUnit2TestFramework.cs(35,0): at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs(42,0): at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs(25,0): at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs(197,0): at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\GivenSelector.cs(122,0): at FluentAssertions.Execution.GivenSelector`1.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\GivenSelector.cs(96,0): at FluentAssertions.Execution.GivenSelector`1.FailWith(String message, Func`2[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Collections\CollectionAssertions.cs(30,0): at FluentAssertions.Collections.CollectionAssertions`2.BeEmpty(String because, Object[] becauseArgs)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      System.ArgumentNullException : Value cannot be null.
      Parameter name: schema
      Stack Trace:
        src\Json.Schema\Validation\Validator.cs(34,0): at Microsoft.Json.Schema.Validation.Validator..ctor(JsonSchema schema)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      System.ArgumentNullException : Value cannot be null.
      Parameter name: schema
      Stack Trace:
        src\Json.Schema\Validation\Validator.cs(34,0): at Microsoft.Json.Schema.Validation.Validator..ctor(JsonSchema schema)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      Newtonsoft.Json.JsonReaderException : Error reading JToken from JsonReader. Path '', line 0, position 0.
      Stack Trace:
           at Newtonsoft.Json.Linq.JToken.ReadFrom(JsonReader reader)
        src\Json.Schema\Validation\Validator.cs(47,0): at Microsoft.Json.Schema.Validation.Validator.Validate(String instanceText)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      Expected collection to be empty because test "enums in properties: missing required property is invalid" should pass, but found {"(1,1): error JS1002: The required property \"bar\" is missing."}.
      Stack Trace:
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net45\Execution\XUnit2TestFramework.cs(35,0): at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs(42,0): at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs(25,0): at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs(197,0): at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\GivenSelector.cs(122,0): at FluentAssertions.Execution.GivenSelector`1.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\GivenSelector.cs(96,0): at FluentAssertions.Execution.GivenSelector`1.FailWith(String message, Func`2[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Collections\CollectionAssertions.cs(30,0): at FluentAssertions.Collections.CollectionAssertions`2.BeEmpty(String because, Object[] becauseArgs)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      Expected collection to be empty because test "enums in properties: missing all properties is invalid" should pass, but found {"(1,1): error JS1002: The required property \"bar\" is missing."}.
      Stack Trace:
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net45\Execution\XUnit2TestFramework.cs(35,0): at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs(42,0): at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs(25,0): at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs(197,0): at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\GivenSelector.cs(122,0): at FluentAssertions.Execution.GivenSelector`1.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\GivenSelector.cs(96,0): at FluentAssertions.Execution.GivenSelector`1.FailWith(String message, Func`2[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Collections\CollectionAssertions.cs(30,0): at FluentAssertions.Collections.CollectionAssertions`2.BeEmpty(String because, Object[] becauseArgs)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      Expected string to be <null>, but found "Error reading G:\Code\JSON-Schema-Test-Suite\tests\draft4\items.json: Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Microsoft.Json.Schema.JsonSchema' because the type requires a JSON object (e.g. {\"name\":\"value\"}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {\"name\":\"value\"}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '[1].schema.items', line 28, position 23.".
      Stack Trace:
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net45\Execution\XUnit2TestFramework.cs(35,0): at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs(42,0): at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs(25,0): at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs(197,0): at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Primitives\ReferenceTypeAssertions.cs(33,0): at FluentAssertions.Primitives.ReferenceTypeAssertions`2.BeNull(String because, Object[] becauseArgs)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      Expected collection to be empty because test "oneOf with base schema: mismatch base schema" should pass, but found {"(1,1): error JS1001: The schema requires \"root object\" to be of type \"String\", but the schema validator found a token of type \"Integer\"."}.
      Stack Trace:
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net45\Execution\XUnit2TestFramework.cs(35,0): at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs(42,0): at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs(25,0): at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs(197,0): at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\GivenSelector.cs(122,0): at FluentAssertions.Execution.GivenSelector`1.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\GivenSelector.cs(96,0): at FluentAssertions.Execution.GivenSelector`1.FailWith(String message, Func`2[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Collections\CollectionAssertions.cs(30,0): at FluentAssertions.Collections.CollectionAssertions`2.BeEmpty(String because, Object[] becauseArgs)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      Expected string to be <null>, but found "Error reading G:\Code\JSON-Schema-Test-Suite\tests\draft4\ref.json: Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Microsoft.Json.Schema.JsonSchema' because the type requires a JSON object (e.g. {\"name\":\"value\"}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {\"name\":\"value\"}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '[2].schema.items', line 57, position 23.".
      Stack Trace:
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net45\Execution\XUnit2TestFramework.cs(35,0): at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs(42,0): at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs(25,0): at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs(197,0): at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Primitives\ReferenceTypeAssertions.cs(33,0): at FluentAssertions.Primitives.ReferenceTypeAssertions`2.BeNull(String because, Object[] becauseArgs)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      System.ArgumentNullException : Value cannot be null.
      Parameter name: schema
      Stack Trace:
        src\Json.Schema\Validation\Validator.cs(34,0): at Microsoft.Json.Schema.Validation.Validator..ctor(JsonSchema schema)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      System.ArgumentNullException : Value cannot be null.
      Parameter name: schema
      Stack Trace:
        src\Json.Schema\Validation\Validator.cs(34,0): at Microsoft.Json.Schema.Validation.Validator..ctor(JsonSchema schema)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      System.ArgumentNullException : Value cannot be null.
      Parameter name: schema
      Stack Trace:
        src\Json.Schema\Validation\Validator.cs(34,0): at Microsoft.Json.Schema.Validation.Validator..ctor(JsonSchema schema)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      System.ArgumentNullException : Value cannot be null.
      Parameter name: schema
      Stack Trace:
        src\Json.Schema\Validation\Validator.cs(34,0): at Microsoft.Json.Schema.Validation.Validator..ctor(JsonSchema schema)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      System.ArgumentNullException : Value cannot be null.
      Parameter name: schema
      Stack Trace:
        src\Json.Schema\Validation\Validator.cs(34,0): at Microsoft.Json.Schema.Validation.Validator..ctor(JsonSchema schema)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      System.ArgumentNullException : Value cannot be null.
      Parameter name: schema
      Stack Trace:
        src\Json.Schema\Validation\Validator.cs(34,0): at Microsoft.Json.Schema.Validation.Validator..ctor(JsonSchema schema)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
      Expected string to be <null>, but found "Error reading G:\Code\JSON-Schema-Test-Suite\tests\draft4\type.json: Object reference not set to an instance of an object.".
      Stack Trace:
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net45\Execution\XUnit2TestFramework.cs(35,0): at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\FluentAssertions.Net40\Execution\TestFrameworkProvider.cs(42,0): at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\DefaultAssertionStrategy.cs(25,0): at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
        C:\projects\fluentassertions-vf06b\Src\Core\Execution\AssertionScope.cs(197,0): at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
        C:\projects\fluentassertions-vf06b\Src\Core\Primitives\ReferenceTypeAssertions.cs(33,0): at FluentAssertions.Primitives.ReferenceTypeAssertions`2.BeNull(String because, Object[] becauseArgs)
        src\Json.Schema.ValidationSuiteTests\ValidationSuite.cs(22,0): at Microsoft.Json.Schema.ValidationSuiteTests.ValidationSuiteTests.ValidationSuite(TestData testData)
  Finished:    Microsoft.Json.Schema.ValidationSuiteTests
=== TEST EXECUTION SUMMARY ===
   Microsoft.Json.Schema.ValidationSuiteTests  Total: 180, Errors: 0, Failed: 17, Skipped: 0, Time: 1.065s
.
SCRIPT FAILED
