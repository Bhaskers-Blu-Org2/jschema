// Copyright (c) Microsoft Corporation.  All Rights Reserved.
// Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

using System;

namespace Microsoft.Json.Schema.ToDotNet
{
    /// <summary>
    /// Generates classes that implement <see cref="System.Collections.Generic.IEqualityComparer{T}"/>.
    /// </summary>
    internal class EqualityComparerGenerator
    {
        internal const string EqualityComparerSuffix = "EqualityComparer";
        private readonly string _namespaceName;

        /// <summary>
        /// Initializes a new instance of the <see cref="EqualityComparerGenerator"/> class.
        /// </summary>
        /// <param name="namespaceName">
        /// The name of the namespace into which the classes generated by this object
        /// are to be placed.
        /// </param>
        internal EqualityComparerGenerator(string namespaceName)
        {
            _namespaceName = namespaceName;
        }

        /// <summary>
        /// Gets a string containing the name of the equality comparer class generated by
        /// the most recent class to <see cref="Generate(string, PropertyInfoDictionary)"/>.
        /// </summary>
        internal static string GetEqualityComparerClassName(string className)
        {
            return className + EqualityComparerSuffix;
        }

        /// <summary>
        /// Generates a class that implements <see cref="System.Collections.Generic.IEqualityComparer{T}"/>
        /// for the specified class.
        /// </summary>
        /// <param name="className">
        /// The name of the class whose equality comparer class is to be generated.
        /// </param>
        /// <param name="propertyInfoDictionary">
        /// An object containing information about each property in the class specified by <paramref name="className"/>.
        /// </param>
        /// <returns>
        /// A string containing the text of the generated equality comparer class.
        /// </returns>
        internal string Generate(string className, PropertyInfoDictionary propertyInfoDictionary)
        {
            return string.Empty;
        }
    }
}
